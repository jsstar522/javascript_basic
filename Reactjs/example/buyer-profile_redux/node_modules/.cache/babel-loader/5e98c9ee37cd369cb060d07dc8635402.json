{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/Thumbnail.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: \", \";\\n    height: \", \";\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    /* calc\\uC5D0\\uC11C \\uC774\\uBBF8\\uC9C0\\uC5D0 \\uACF1\\uD558\\uB294 \\uC22B\\uC790\\uAC00 \\uB192\\uC544\\uC9C8\\uC218\\uB85D \\uC6D0\\uC5D0 \\uAC00\\uAE4C\\uC6CC\\uC9D0 */\\n    border-radius: calc(\", \" * 0.2); \\n    \\n    font-size: calc(\", \" * 0.75);\\n\\n    background: \", \";\\n    color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport oc from 'open-color';\nimport Person from 'react-icons/lib/md/person';\nimport PropTypes from 'prop-types';\nvar Wrapper = styled.div(_templateObject(), function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.color;\n});\nWrapper.propTypes = {\n  size: PropTypes.string,\n  color: PropTypes.string\n};\n\nvar Thumbnail = function Thumbnail(_ref) {\n  var size = _ref.size,\n      color = _ref.color;\n  return React.createElement(Wrapper, {\n    size: size,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Person, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nThumbnail.propTypes = {\n  size: PropTypes.string,\n  color: PropTypes.string\n};\nThumbnail.defaultProps = {\n  size: '4rem',\n  color: '#000'\n};\nexport default Thumbnail;","map":{"version":3,"sources":["/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/Thumbnail.js"],"names":["React","styled","oc","Person","PropTypes","Wrapper","div","props","size","color","propTypes","string","Thumbnail","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAV,oBACA,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CADL,EAEC,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAFN,EAQa,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CARlB,EAUS,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAVd,EAYK,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,KAAV;AAAA,CAZV,CAAb;AAgBAJ,OAAO,CAACK,SAAR,GAAoB;AAChBF,EAAAA,IAAI,EAAEJ,SAAS,CAACO,MADA;AAEhBF,EAAAA,KAAK,EAAEL,SAAS,CAACO;AAFD,CAApB;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEJ,IAAF,QAAEA,IAAF;AAAA,MAAQC,KAAR,QAAQA,KAAR;AAAA,SACd,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAED,IAAf;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADc;AAAA,CAAlB;;AAMAG,SAAS,CAACF,SAAV,GAAsB;AAClBF,EAAAA,IAAI,EAAEJ,SAAS,CAACO,MADE;AAElBF,EAAAA,KAAK,EAAEL,SAAS,CAACO;AAFC,CAAtB;AAMAC,SAAS,CAACC,YAAV,GAAyB;AACrBL,EAAAA,IAAI,EAAE,MADe;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAzB;AAKA,eAAeG,SAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport oc from 'open-color';\nimport Person from 'react-icons/lib/md/person';\nimport PropTypes from 'prop-types';\n\nconst Wrapper = styled.div`\n    width: ${props => props.size };\n    height: ${props => props.size };\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    /* calc에서 이미지에 곱하는 숫자가 높아질수록 원에 가까워짐 */\n    border-radius: calc(${props => props.size} * 0.2); \n    \n    font-size: calc(${props => props.size} * 0.75);\n\n    background: ${props => props.color};\n    color: white;\n`;\n\nWrapper.propTypes = {\n    size: PropTypes.string,\n    color: PropTypes.string\n};\n\nconst Thumbnail = ({size, color}) => (\n    <Wrapper size={size} color={color}>\n        <Person/>\n    </Wrapper>\n);\n\nThumbnail.propTypes = {\n    size: PropTypes.string,\n    color: PropTypes.string\n};\n\n\nThumbnail.defaultProps = {\n    size: '4rem',\n    color: '#000'\n};\n\nexport default Thumbnail;"]},"metadata":{},"sourceType":"module"}