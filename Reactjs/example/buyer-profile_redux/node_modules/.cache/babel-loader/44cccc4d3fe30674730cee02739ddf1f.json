{"ast":null,"code":"import _classCallCheck from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/ContactList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nvar Wrapper = styled.div(_templateObject());\n\nvar ContactList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactList, _Component);\n\n  function ContactList() {\n    _classCallCheck(this, ContactList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactList).apply(this, arguments));\n  }\n\n  _createClass(ContactList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          onOpenModify = _this$props.onOpenModify,\n          onToggleFavorite = _this$props.onToggleFavorite,\n          search = _this$props.search;\n      var contactList = contacts.filter( //검색어로 필터링\n      function (c) {\n        return c.name.indexOf(search) !== -1;\n      }).sort( //가나다순 정렬\n      function (a, b) {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }).map(function (contact) {\n        return React.createElement(ContactItem, {\n          key: contact.id,\n          contact: contact,\n          onOpenModify: onOpenModify,\n          onToggleFavorite: onToggleFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, contactList);\n    }\n  }]);\n\n  return ContactList;\n}(Component);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  search: PropTypes.string,\n  // 검색키워드에 사용\n  onToggleFavorite: PropTypes.func,\n  // 즐겨찾기 버튼\n  onOpenModify: PropTypes.func // 수정 버튼\n\n};\nexport default ContactList;","map":{"version":3,"sources":["/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/ContactList.js"],"names":["React","Component","styled","PropTypes","ContactItem","Wrapper","div","ContactList","props","contacts","onOpenModify","onToggleFavorite","search","contactList","filter","c","name","indexOf","sort","a","b","map","contact","id","propTypes","arrayOf","object","string","func"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,mBAAb;;IAIMC,W;;;;;;;;;;;;;6BAQK;AAAA,wBACsD,KAAKC,KAD3D;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,YADX,eACWA,YADX;AAAA,UACyBC,gBADzB,eACyBA,gBADzB;AAAA,UAC2CC,MAD3C,eAC2CA,MAD3C;AAEP,UAAMC,WAAW,GAAGJ,QAAQ,CACzBK,MADiB,EACR;AACR,gBAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAeL,MAAf,MAA2B,CAAC,CAAhC;AAAA,OAFe,EAGhBM,IAHgB,EAGR;AACR,gBAACC,CAAD,EAAIC,CAAJ,EAAU;AACR,YAAID,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB,OAAO,CAAP;AACrB,YAAIG,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,eAAO,CAAP;AACD,OARe,EAShBK,GATgB,CAUhB,UAAAC,OAAO;AAAA,eACL,oBAAC,WAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,UAAA,OAAO,EAAED,OAFX;AAGE,UAAA,YAAY,EAAEZ,YAHhB;AAIE,UAAA,gBAAgB,EAAEC,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK;AAAA,OAVS,CAApB;AAmBA,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,WADH,CADF;AAKD;;;;EAlCuBZ,S;;AAApBM,W,CACGiB,S,GAAY;AACjBf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,CADO;AAEjBd,EAAAA,MAAM,EAAET,SAAS,CAACwB,MAFD;AAEmB;AACpChB,EAAAA,gBAAgB,EAAER,SAAS,CAACyB,IAHX;AAGmB;AACpClB,EAAAA,YAAY,EAAEP,SAAS,CAACyB,IAJP,CAImB;;AAJnB,C;AAoCrB,eAAerB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;\n`;\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    search: PropTypes.string,           // 검색키워드에 사용\n    onToggleFavorite: PropTypes.func,   // 즐겨찾기 버튼\n    onOpenModify: PropTypes.func        // 수정 버튼\n  }\n\n  render() {\n    const { contacts, onOpenModify, onToggleFavorite, search } = this.props;\n    const contactList = contacts\n      .filter(  //검색어로 필터링\n        c => c.name.indexOf(search) !== -1\n      ).sort(   //가나다순 정렬\n        (a, b) => {\n          if (a.name > b.name) return 1;\n          if (a.name < b.name) return -1;\n          return 0;\n        }\n      ).map(\n        contact => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            onOpenModify={onOpenModify}\n            onToggleFavorite={onToggleFavorite}\n          />\n        )\n      );\n    return (\n      <Wrapper>\n        {contactList}\n      </Wrapper>\n    );\n  }\n}\n\nexport default ContactList;"]},"metadata":{},"sourceType":"module"}