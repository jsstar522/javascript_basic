{"ast":null,"code":"import _classCallCheck from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/FavoriteList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nvar Wrapper = styled.div(_templateObject());\n\nvar ContactList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactList, _Component);\n\n  function ContactList() {\n    _classCallCheck(this, ContactList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactList).apply(this, arguments));\n  }\n\n  _createClass(ContactList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          onOpenModify = _this$props.onOpenModify,\n          onToggleFavorite = _this$props.onToggleFavorite;\n      var favoriteList = contacts.filter( //favorite가 true인것만 필터링\n      function (contact) {\n        return contact.favorite;\n      }).sort( //가나다순 정렬\n      function (a, b) {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }).map(function (contact) {\n        return React.createElement(ContactItem, {\n          key: contact.id,\n          contact: contact,\n          onOpenModify: onOpenModify,\n          onToggleFavorite: onToggleFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, favoriteList);\n    }\n  }]);\n\n  return ContactList;\n}(Component);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  favorite: PropTypes.bool,\n  // 즐겨찾기 값\n  onToggleFavorite: PropTypes.func,\n  // 즐겨찾기 버튼\n  onOpenModify: PropTypes.func // 수정 버튼\n\n};\nexport default ContactList;","map":{"version":3,"sources":["/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/components/FavoriteList.js"],"names":["React","Component","styled","PropTypes","ContactItem","Wrapper","div","ContactList","props","contacts","onOpenModify","onToggleFavorite","favoriteList","filter","contact","favorite","sort","a","b","name","map","id","propTypes","arrayOf","object","bool","func"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,mBAAb;;IAIMC,W;;;;;;;;;;;;;6BAQK;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,YADX,eACWA,YADX;AAAA,UACyBC,gBADzB,eACyBA,gBADzB;AAEP,UAAMC,YAAY,GAAGH,QAAQ,CAC1BI,MADkB,EACT;AACR,gBAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,QAAZ;AAAA,OAFU,EAGjBC,IAHiB,EAGT;AACR,gBAACC,CAAD,EAAIC,CAAJ,EAAU;AACR,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,YAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,eAAO,CAAP;AACD,OARgB,EASjBC,GATiB,CAUjB,UAAAN,OAAO;AAAA,eACL,oBAAC,WAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACO,EADf;AAEE,UAAA,OAAO,EAAEP,OAFX;AAGE,UAAA,YAAY,EAAEJ,YAHhB;AAIE,UAAA,gBAAgB,EAAEC,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK;AAAA,OAVU,CAArB;AAmBA,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,YADH,CADF;AAKD;;;;EAlCuBX,S;;AAApBM,W,CACGe,S,GAAY;AACjBb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,MAA5B,CADO;AAEjBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,IAFH;AAEmB;AACpCd,EAAAA,gBAAgB,EAAER,SAAS,CAACuB,IAHX;AAGmB;AACpChB,EAAAA,YAAY,EAAEP,SAAS,CAACuB,IAJP,CAImB;;AAJnB,C;AAoCrB,eAAenB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;\n`;\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    favorite: PropTypes.bool,           // 즐겨찾기 값\n    onToggleFavorite: PropTypes.func,   // 즐겨찾기 버튼\n    onOpenModify: PropTypes.func        // 수정 버튼\n  }\n\n  render() {\n    const { contacts, onOpenModify, onToggleFavorite} = this.props;\n    const favoriteList = contacts\n      .filter(  //favorite가 true인것만 필터링\n        contact => contact.favorite\n      ).sort(   //가나다순 정렬\n        (a, b) => {\n          if (a.name > b.name) return 1;\n          if (a.name < b.name) return -1;\n          return 0;\n        }\n      ).map(\n        contact => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            onOpenModify={onOpenModify}\n            onToggleFavorite={onToggleFavorite}\n          />\n        )\n      );\n    return (\n      <Wrapper>\n        {favoriteList}\n      </Wrapper>\n    );\n  }\n}\n\nexport default ContactList;"]},"metadata":{},"sourceType":"module"}