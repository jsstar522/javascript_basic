{"ast":null,"code":"import _toConsumableArray from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport Container from './components/Container';\nimport ViewSelector from './components/ViewSelector';\nimport FloatingButton from './components/FloatingButton';\nimport ContactModal from './components/ContactModal';\nimport Dimmed from './components/Dimmed';\nimport shortid from 'shortid';\nimport ContactList from './components/ContactList';\nimport Input from './components/Input';\nimport FavoriteList from './components/FavoriteList';\nimport oc from 'open-color'; // 랜덤색상\n\nfunction generateRandomColor() {\n  var colors = ['gray', 'red', 'pink', 'grape', 'violet', 'indigo', 'blue', 'cyan', 'teal', 'green', 'lime', 'yellow', 'orange']; // 0 부터 12까지 랜덤 숫자\n\n  var random = Math.floor(Math.random() * 13);\n  return oc[colors[random]][6];\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      view: 'list',\n      modal: {\n        visible: false,\n        mode: null // 생성(create) 혹은 수정(modify) 모드\n\n      },\n      contacts: [],\n      search: '' // 즐겨찾기/목록 선택시 state 업데이트\n\n    };\n\n    _this.handleSelectView = function (view) {\n      return _this.setState({\n        view: view\n      });\n    };\n\n    _this.modalHandler = {\n      show: function show(mode, payload) {\n        _this.setState({\n          modal: _objectSpread({\n            mode: mode,\n            visible: true\n          }, payload)\n        });\n      },\n      hide: function hide() {\n        _this.setState({\n          modal: _objectSpread({}, _this.state.modal, {\n            visible: false\n          })\n        });\n      },\n      change: function change(_ref) {\n        var name = _ref.name,\n            value = _ref.value;\n\n        _this.setState({\n          modal: _objectSpread({}, _this.state.modal, _defineProperty({}, name, value))\n        });\n      },\n      action: {\n        create: function create() {\n          var id = shortid.generate();\n          var _this$state = _this.state,\n              contacts = _this$state.contacts,\n              _this$state$modal = _this$state.modal,\n              name = _this$state$modal.name,\n              phone = _this$state$modal.phone,\n              color = _this$state$modal.color;\n          var contact = {\n            id: id,\n            name: name,\n            phone: phone,\n            color: color,\n            favorite: false\n          };\n\n          _this.setState({\n            // 불변성 유지. concat으로 해도 상관없다.\n            contacts: [].concat(_toConsumableArray(contacts), [contact])\n          }); //작업이 완료되면 창 닫기\n\n\n          _this.modalHandler.hide();\n        },\n        modify: function modify() {\n          var _this$state2 = _this.state,\n              _this$state2$modal = _this$state2.modal,\n              name = _this$state2$modal.name,\n              phone = _this$state2$modal.phone,\n              index = _this$state2$modal.index,\n              contacts = _this$state2.contacts;\n          var item = contacts[index];\n\n          _this.setState({\n            contacts: [].concat(_toConsumableArray(contacts.slice(0, index)), [_objectSpread({}, item, {\n              name: name,\n              phone: phone\n            })], _toConsumableArray(contacts.slice(index + 1, contacts.length)))\n          });\n\n          _this.modalHandler.hide();\n        },\n        remove: function remove() {\n          // 레퍼런스 준비\n          var _this$state3 = _this.state,\n              index = _this$state3.modal.index,\n              contacts = _this$state3.contacts; // 상태 변경\n\n          _this.setState({\n            contacts: [].concat(_toConsumableArray(contacts.slice(0, index)), _toConsumableArray(contacts.slice(index + 1, contacts.length)))\n          }); // 모달 닫기\n\n\n          _this.modalHandler.hide();\n        }\n      } // FloatingButton을 클릭했을 때\n\n    };\n\n    _this.handleFloatingButtonClick = function () {\n      var view = _this.state.view; // 현재 view list 바꾸기\n\n      if (view !== 'list') _this.setState({\n        view: 'list'\n      }); // 목록 추가 모달 띄우기\n\n      _this.modalHandler.show('create', //mode\n      {\n        name: '',\n        phone: '',\n        color: generateRandomColor()\n      });\n    };\n\n    _this.itemHandler = {\n      toggleFavorite: function toggleFavorite(id) {\n        var contacts = _this.state.contacts;\n        var index = contacts.findIndex(function (contact) {\n          return contact.id === id;\n        });\n        var item = _this.state.contacts[index];\n\n        _this.setState({\n          contacts: [].concat(_toConsumableArray(contacts.slice(0, index)), [_objectSpread({}, item, {\n            favorite: !item.favorite\n          })], _toConsumableArray(contacts.slice(index + 1, contacts.length)))\n        });\n      },\n      openModify: function openModify(id) {\n        var contacts = _this.state.contacts;\n        var index = contacts.findIndex(function (contact) {\n          return contact.id === id;\n        });\n        var item = _this.state.contacts[index];\n\n        _this.modalHandler.show('modify', _objectSpread({}, item, {\n          index: index\n        }));\n      }\n    };\n\n    _this.handleSearchChange = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var handleSelectView = this.handleSelectView,\n          handleFloatingButtonClick = this.handleFloatingButtonClick,\n          modalHandler = this.modalHandler,\n          itemHandler = this.itemHandler,\n          handleSearchChange = this.handleSearchChange;\n      var _this$state4 = this.state,\n          view = _this$state4.view,\n          modal = _this$state4.modal,\n          contacts = _this$state4.contacts,\n          search = _this$state4.search,\n          favorite = _this$state4.favorite;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(ViewSelector, {\n        onSelect: handleSelectView,\n        selected: view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Container, {\n        visible: view === 'favorite',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(FavoriteList, {\n        contacts: contacts,\n        onOpenModify: itemHandler.openModify,\n        onToggleFavorite: itemHandler.toggleFavorite,\n        search: search,\n        favorite: favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(Container, {\n        visible: view === 'list',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: handleSearchChange,\n        value: search,\n        placeholder: \"\\uAC80\\uC0C9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(ContactList, {\n        contacts: contacts,\n        onOpenModify: itemHandler.openModify,\n        onToggleFavorite: itemHandler.toggleFavorite,\n        search: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(Dimmed, {\n        visible: modal.visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(ContactModal, Object.assign({}, modal, {\n        onHide: modalHandler.hide,\n        onChange: modalHandler.change,\n        onAction: modalHandler.action[modal.mode],\n        onRemove: modalHandler.action.remove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(FloatingButton, {\n        onClick: handleFloatingButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jongseokpark/Desktop/infinite_learn/javascript_basic/Reactjs/example/buyer-profile_redux/src/App.js"],"names":["React","Component","Header","Container","ViewSelector","FloatingButton","ContactModal","Dimmed","shortid","ContactList","Input","FavoriteList","oc","generateRandomColor","colors","random","Math","floor","App","state","view","modal","visible","mode","contacts","search","handleSelectView","setState","modalHandler","show","payload","hide","change","name","value","action","create","id","generate","phone","color","contact","favorite","modify","index","item","slice","length","remove","handleFloatingButtonClick","itemHandler","toggleFavorite","findIndex","openModify","handleSearchChange","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Container from './components/Container';\nimport ViewSelector from './components/ViewSelector';\nimport FloatingButton from './components/FloatingButton';\nimport ContactModal from './components/ContactModal';\nimport Dimmed from './components/Dimmed';\nimport shortid from 'shortid';\nimport ContactList from './components/ContactList';\nimport Input from './components/Input';\nimport FavoriteList from './components/FavoriteList';\n\nimport oc from 'open-color';\n// 랜덤색상\nfunction generateRandomColor() {\n    const colors = [\n        'gray',\n        'red',\n        'pink',\n        'grape',\n        'violet',\n        'indigo',\n        'blue',\n        'cyan',\n        'teal',\n        'green',\n        'lime',\n        'yellow',\n        'orange'\n    ];\n\n    // 0 부터 12까지 랜덤 숫자\n    const random = Math.floor(Math.random() * 13);\n\n    return oc[colors[random]][6];\n}\n\nclass App extends Component {\n    // state 정의\n    state = {\n        view: 'list',\n        modal: {\n            visible: false,\n            mode: null  // 생성(create) 혹은 수정(modify) 모드\n        },\n        contacts: [],\n        search: ''\n    }\n    // 즐겨찾기/목록 선택시 state 업데이트\n    handleSelectView = (view) => this.setState({ view })\n\n    // 모달 메서드\n    modalHandler = {\n        show: (mode, payload) => {\n            this.setState({\n                modal: {\n                    mode,\n                    visible: true,\n                    ...payload\n                }\n            })\n        },\n        hide: () => {\n            this.setState({\n                modal: {\n                    ...this.state.modal,\n                    visible: false\n                }\n            })\n        },\n        change: ({ name, value }) => {\n            this.setState({\n                modal: {\n                    ...this.state.modal,\n                    [name]: value\n                }\n            })\n        },\n        action: {\n            create: () => {\n                const id = shortid.generate();\n                const { contacts, modal: { name, phone, color } } = this.state;\n                const contact = {\n                    id,\n                    name,\n                    phone,\n                    color,\n                    favorite: false\n                };\n                this.setState({\n                    // 불변성 유지. concat으로 해도 상관없다.\n                    contacts: [...contacts, contact]\n                });\n                //작업이 완료되면 창 닫기\n                this.modalHandler.hide();\n            },\n            modify: () => {\n                const {\n                    modal: { name, phone, index },\n                    contacts\n                } = this.state;\n\n                const item = contacts[index];\n                \n                this.setState({\n                    contacts: [\n                        ...contacts.slice(0, index),\n                        {\n                            ...item,\n                            name,\n                            phone\n                        },\n                        ...contacts.slice(index+1, contacts.length)\n                    ]\n                });\n\n                this.modalHandler.hide();\n            },\n            remove: () => {\n                // 레퍼런스 준비\n                const {\n                    modal: { index },\n                    contacts\n                } = this.state;\n\n                // 상태 변경\n                this.setState({\n                    contacts: [\n                        ...contacts.slice(0, index),\n                        ...contacts.slice(index + 1, contacts.length) \n                    ]\n                });\n\n                // 모달 닫기\n                this.modalHandler.hide();\n            }\n        }\n    }\n\n    // FloatingButton을 클릭했을 때\n    handleFloatingButtonClick = () => {\n        const { view } = this.state;\n        // 현재 view list 바꾸기\n        if (view !== 'list')\n            this.setState({ view: 'list' });\n        // 목록 추가 모달 띄우기\n        this.modalHandler.show(\n            'create',   //mode\n            {\n                name: '',\n                phone: '',\n                color: generateRandomColor()\n            }\n        );\n    }\n\n    itemHandler = {\n        toggleFavorite: (id) => {\n            const { contacts } = this.state;\n            const index = contacts.findIndex(contact => contact.id === id);\n            const item = this.state.contacts[index];\n\n            this.setState({\n                contacts: [\n                    ...contacts.slice(0, index),\n                    {\n                        ...item,\n                        favorite: !item.favorite\n                    },\n                    ...contacts.slice(index+1, contacts.length)\n                ]\n            })\n        },\n        openModify: (id) => {\n            const { contacts } = this.state;\n            const index = contacts.findIndex(contact => contact.id === id);\n            const item = this.state.contacts[index];\n\n            this.modalHandler.show(\n                'modify',\n                {\n                    ...item,\n                    index\n                }\n            );\n        }\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({\n            search: e.target.value\n        });\n    }\n\n    render() {\n        const { \n            handleSelectView, \n            handleFloatingButtonClick, \n            modalHandler, \n            itemHandler, \n            handleSearchChange,\n        } = this;\n\n        const { view, modal, contacts, search, favorite } = this.state\n        return (\n            <div>\n                <Header />\n                <ViewSelector onSelect={handleSelectView} selected={view} />\n                <Container visible={view === 'favorite'}>\n                    <FavoriteList \n                        contacts={contacts}\n                        onOpenModify={itemHandler.openModify}\n                        onToggleFavorite={itemHandler.toggleFavorite}\n                        search={search}\n                        favorite={favorite}\n                    />\n                </Container>\n                <Container visible={view === 'list'}>\n                    <Input\n                        onChange={handleSearchChange}\n                        value={search}\n                        placeholder=\"검색\"\n                    />\n                    <ContactList \n                        contacts={contacts}\n                        onOpenModify={itemHandler.openModify}\n                        onToggleFavorite={itemHandler.toggleFavorite}\n                        search={search}\n                    />\n                </Container>\n                <Dimmed visible={modal.visible} />\n                <ContactModal \n                    {...modal} \n                    onHide={modalHandler.hide} \n                    onChange={modalHandler.change} \n                    onAction={modalHandler.action[modal.mode]}\n                    onRemove={modalHandler.action.remove}\n                />\n                <FloatingButton onClick={handleFloatingButtonClick} />\n            </div>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}